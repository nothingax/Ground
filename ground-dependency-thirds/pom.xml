<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>Ground</artifactId>
        <groupId>com.work</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ground-dependency-thirds</artifactId>

    <!-- 依赖获取库-->
    <repositories>
        <repository>
            <id>${download.snapshots.repo.id}</id>
            <url>${nexus.url}/${download.snapshots.repo.id}</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- release版本 暂未添加-->
        <repository>
            <id>cloud-releases</id>
            <url>${nexus.url}/releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!-- 其他 -->
        <repository>
            <id>central-aliyun</id>
            <url>https://maven.aliyun.com/repository/central</url>
        </repository>

        <repository>
            <id>public-aliyun</id>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>

        <repository>
            <id>mvn</id>
            <url>http://mvnrepository.com/artifact</url>
        </repository>

    </repositories>

    <!-- 属性定义 -->
    <properties>
        <nexus.url>http://nexus.xxx.com/repository/</nexus.url>
        <upload.snapshots.repo.id>zhangjianwei-internal-repo</upload.snapshots.repo.id>
        <download.snapshots.repo.id>zhangjianwei-group-repo</download.snapshots.repo.id>
        <file.encoding>UTF-8</file.encoding>
        <java.version>1.8</java.version>
        <compile.version>1.8</compile.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>

        <!--  定义版本api版本号-->
    </properties>

    <!-- 通过dependencyManagement元素来管理jar包的版本，
    让子项目中引用一个依赖而不用显示的列出版本号。Maven会沿着父子层次向上走，
    直到找到一个拥有dependencyManagement元素的项目，
    然后它就会使用在这个dependencyManagement元素中指定的版本号。

    做到统一管理项目的版本号，确保应用的各个项目的依赖和版本一致，
    才能保证测试的和发布的是相同的成果，因此，在顶层pom中定义共同的依赖关系。
    同时可以避免在每个使用的子项目中都声明一个版本号，这样想升级或者切换到另一个版本时，
    只需要在父类容器里更新，不需要任何一个子项目的修改；如果某个子项目需要另外一个版本号时，
    只需要在dependencies中声明一个版本号即可。子类就会使用子类声明的版本号，
    不继承于父类版本号
    -->
    <dependencyManagement>
        <dependencies>
            <!--定义依赖，使用properties中的版本号-->
        </dependencies>
    </dependencyManagement>

    <!-- 插件 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${file.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>